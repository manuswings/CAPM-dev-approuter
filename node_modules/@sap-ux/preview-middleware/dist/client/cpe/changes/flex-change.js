"use strict";

sap.ui.define(["sap/ui/rta/command/CommandFactory"], function (CommandFactory) {
  "use strict";

  /**
   * Function to check a give value is a binding expression.
   *
   * @param value value to be checked.
   * @returns boolean
   */
  function isBindingExpression(value) {
    return value.includes('{') && value.includes('}');
  }

  /**
   *
   * @param options UI5 adaptation options
   * @param change changed property of a control
   */
  async function applyChange(options, change) {
    const {
      rta
    } = options;
    const modifiedControl = sap.ui.getCore().byId(change.controlId);
    if (!modifiedControl) {
      return;
    }
    const flexSettings = rta.getFlexSettings();
    const changeType = typeof change.value === 'string' && isBindingExpression(change.value) ? 'BindProperty' : 'Property';
    const property = typeof change.value === 'string' && isBindingExpression(change.value) ? 'newBinding' : 'newValue';
    const modifiedValue = {
      generator: flexSettings.generator,
      propertyName: change.propertyName,
      [property]: change.value
    };
    const command = await CommandFactory.getCommandFor(modifiedControl, changeType, modifiedValue, null, flexSettings);
    await rta.getCommandStack().pushAndExecute(command);
  }
  var __exports = {
    __esModule: true
  };
  __exports.applyChange = applyChange;
  return __exports;
});
//# sourceMappingURL=flex-change.js.map